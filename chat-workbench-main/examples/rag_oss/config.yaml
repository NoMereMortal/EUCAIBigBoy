# Default environment (dev, staging, prod)
env: dev

# Development environment configuration
dev:
  # AWS Configuration
  awsProfile: default
  deploymentName: example
  accountNumber: 123456789012
  region: us-west-2
  deploymentStage: dev

  # Application Configuration
  appName: cwb
  logLevel: INFO
  targetPlatform: linux/amd64
  removalPolicy: destroy
  runCdkNag: false

  # UI Configuration
  uiConfig:
    title: 'Chat Workbench'

  # VPC Configuration
  vpcConfig:
    vpcId:

  # Cognito Configuration
  cognitoAuthConfig:
    userPoolName: cwb-users
    userPoolDomainName: cwb-dev

  # Load Balancer Configuration
  loadBalancerConfig:
    idleTimeout: 300

    # ALB Placement Strategy
    albPlacement: public # Options: public, private, isolated
    # public:   Internet-facing ALB in public subnets (default)
    # private:  Internal ALB in private subnets with NAT gateway access
    # isolated: Internal ALB in isolated subnets (maximum security, no internet access)

    # Optional SSL Certificate (supports both ACM and IAM certificates)
    # sslCertificateArn: arn:aws:acm:us-east-1:123456789012:certificate/abc-123-def
    # sslCertificateArn: arn:aws:iam::123456789012:server-certificate/my-cert

  # WAF Security Configuration
  wafConfig:
    managedRules:
      coreRuleSet: false
      knownBadInputs: true
      amazonIpReputation: true
    rateLimiting:
      enabled: true
      requestsPerMinute: 2000
    logging:
      enabled: false

  # Alarm Configuration
  alarmConfig:
    enable: false
    period: 1
    threshold: 1
    evaluationPeriods: 1
    loggingFilterPatterns:
      - ERROR
      - CRITICAL
    emailAddresses:
      - admin@example.com

  # Authentication Configuration
  authConfig:
    enableAuth: true
    authority: http://localhost:8080/realms/cwb
    clientId: cwb-ui
    secretName: app/auth/cognito # pragma: allowlist secret

  # REST API Configuration
  restApiConfig:
    apiVersion: v1
    containerConfig:
      cpuLimit: 1024
      memoryLimit: 2048
      healthCheckConfig:
        command:
          - CMD-SHELL
          - exit 0
        interval: 10
        startPeriod: 30
        timeout: 5
        retries: 3
    healthCheckConfig:
      path: /api/health
      interval: 60
      timeout: 30
      healthyThresholdCount: 2
      unhealthyThresholdCount: 10
    autoScalingConfig:
      minCapacity: 1
      maxCapacity: 5
      defaultInstanceWarmup: 120
      cooldown: 300
      metricConfig:
        albMetricName: RequestCountPerTarget
        targetValue: 100
        duration: 60
        estimatedInstanceWarmup: 60

  # Data Configuration
  dataConfig:
    memoryDbNodeType: db.t4g.small

    # File Storage Configuration
    fileStorageEnabled: true
    fileStorageType: s3

    # OpenSearch Serverless Configuration (for RAG features)
    openSearchEnabled: true
    openSearchDefaultIndex: documents
    openSearchStandbyReplicas: false

  # Logging Configuration
  loggingConfig:
    # CloudWatch log retention in days (1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653)
    logRetentionDays: 30
    wafLogRetentionDays: 30

  # S3 Configuration
  s3Config:
    accessLogsLifecycle:
      transitionToIADays: 30
      transitionToGlacierDays: 90
      deletionDays: 365
    cloudFrontLogsLifecycle:
      transitionToIADays: 30
      transitionToGlacierDays: 90
      deletionDays: 365

  # Resource Tags
  tags:
    - Key: Project
      Value: ChatWorkbench
    - Key: Environment
      Value: Development
